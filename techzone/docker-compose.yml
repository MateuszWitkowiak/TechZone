services:
  backend:
    build: ./services/backend
    ports:
      - "3001:3001"
    environment:
      - MONGODB_USERNAME=${MONGODB_USERNAME}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - MONGODB_CLUSTER=${MONGODB_CLUSTER}
      - MONGODB_DBNAME=${MONGODB_DBNAME}
      - NODE_ENV=production
      - JWT_SECRET=${JWT_SECRET}
      - KEYCLOAK_REALM_URL=http://keycloak:8080/realms/techzone
      - KEYCLOAK_CLIENT_ID=${KEYCLOAK_CLIENT_ID}
      - KEYCLOAK_CLIENT_SECRET=${KEYCLOAK_CLIENT_SECRET}
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    depends_on:
      - mongodb
      - redis
      - keycloak
      - rabbitmq
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - ./services/backend:/app
      - /app/node_modules

  frontend:
    build: ./services/frontend
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:3001
      - VITE_KEYCLOAK_URL=http://localhost:8080
      - VITE_KEYCLOAK_REALM=techzone
      - VITE_KEYCLOAK_CLIENT_ID=${KEYCLOAK_CLIENT_ID}
    depends_on:
      - backend
      - keycloak
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - ./services/frontend:/app
      - /app/node_modules
    
  notification-service:
    build: ./services/notification-service
    env_file:
      - ./services/notification-service/.env
    depends_on:
      - rabbitmq
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - ./services/notification-service:/app
  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    command: start-dev
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=keycloak_password
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME_STRICT_HTTPS=false
      - KC_HTTP_ENABLED=true
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - app-network
    restart: unless-stopped

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=keycloak_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3.12-management
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app-network
    restart: unless-stopped

  mongodb:
    image: mongo:7.0
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGODB_DBNAME}
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - app-network
    restart: unless-stopped

  redis:
    image: redis:7.2-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  postgres_data:
    driver: local
  rabbitmq_data:
    driver: local